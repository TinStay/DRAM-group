[{"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\index.js":"1","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Navbar\\Navbar.js":"2","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\App.js":"3","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\Context\\AuthContext.js":"4","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\firebase.js":"5","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\AuthForms\\Signup.js":"6","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\AuthForms\\Login.js":"7","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\User\\Profile.js":"8","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\User\\PrivateRoute.js":"9","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\AuthForms\\ForgotPassword.js":"10","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\axios.js":"11","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\User\\UpdateProfile.js":"12","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\shared\\sharedFunctions.js":"13","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\Discussions.js":"14","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\Categories.js":"15","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\DiscussionBox.js":"16","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\DiscussionForm.js":"17","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\DiscussionDetail\\DiscussionDetail.js":"18","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\DiscussionDetail\\DiscussionComment.js":"19","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Home\\Homepage.js":"20","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Footer\\Footer.js":"21","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Navbar\\Searchbar.js":"22","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\User\\interests.js":"23"},{"size":220,"mtime":1608239004189,"results":"24","hashOfConfig":"25"},{"size":4301,"mtime":1610886234823,"results":"26","hashOfConfig":"25"},{"size":1943,"mtime":1610820717097,"results":"27","hashOfConfig":"25"},{"size":1853,"mtime":1608373511977,"results":"28","hashOfConfig":"25"},{"size":780,"mtime":1608646294533,"results":"29","hashOfConfig":"25"},{"size":4231,"mtime":1610718909027,"results":"30","hashOfConfig":"25"},{"size":2317,"mtime":1610821001204,"results":"31","hashOfConfig":"25"},{"size":5398,"mtime":1610880667517,"results":"32","hashOfConfig":"25"},{"size":473,"mtime":1608289055036,"results":"33","hashOfConfig":"25"},{"size":2169,"mtime":1610718909026,"results":"34","hashOfConfig":"25"},{"size":173,"mtime":1608482558732,"results":"35","hashOfConfig":"25"},{"size":17498,"mtime":1610881647021,"results":"36","hashOfConfig":"25"},{"size":734,"mtime":1610728188049,"results":"37","hashOfConfig":"25"},{"size":4842,"mtime":1610889093328,"results":"38","hashOfConfig":"25"},{"size":1453,"mtime":1610879466697,"results":"39","hashOfConfig":"25"},{"size":3202,"mtime":1610827136054,"results":"40","hashOfConfig":"25"},{"size":4057,"mtime":1610718909035,"results":"41","hashOfConfig":"25"},{"size":10745,"mtime":1610827328534,"results":"42","hashOfConfig":"25"},{"size":2397,"mtime":1610827311715,"results":"43","hashOfConfig":"25"},{"size":3963,"mtime":1610821221996,"results":"44","hashOfConfig":"25"},{"size":257,"mtime":1610718909036,"results":"45","hashOfConfig":"25"},{"size":4149,"mtime":1610879087449,"results":"46","hashOfConfig":"25"},{"size":45620,"mtime":1610878270198,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"2eaqnv",{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\index.js",[],["101","102"],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Navbar\\Navbar.js",["103","104","105","106","107"],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\App.js",[],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\Context\\AuthContext.js",[],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\firebase.js",[],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\AuthForms\\Signup.js",["108","109","110","111"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport axios from \"../../axios\";\r\n// Style\r\nimport { Card, Button, Form, Alert } from \"react-bootstrap\";\r\nimport classes from \"./AuthForms.module.scss\";\r\n\r\n// Auth\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\n\r\n// React Router\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst Signup = () => {\r\n  // State\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // React router history\r\n  const history = useHistory();\r\n\r\n  // Form fields references\r\n  const emailRef = useRef();\r\n  const lastNameRef = useRef();\r\n  const firstNameRef = useRef();\r\n  const usernameRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n\r\n  // Signup function from context\r\n  const { signup, currentUser } = useAuth();\r\n\r\n  async function handleSubmit(e) {\r\n    // Prevent page from refreshing\r\n    e.preventDefault();\r\n\r\n    let currentUserID = \"\";\r\n\r\n    // Validate form\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      // Set an error and exit out of function\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    try {\r\n      // Reset error message if it exists before signing up\r\n      setError(\"\");\r\n      setIsLoading(true);\r\n\r\n      await signup(emailRef.current.value, passwordRef.current.value).then(\r\n        (registeredUser) => {\r\n          // console.log(\"user\",registeredUser)\r\n\r\n          const userData = {\r\n            userID: registeredUser.user.uid,\r\n            firstName: firstNameRef.current.value,\r\n            lastName: lastNameRef.current.value,\r\n            username: usernameRef.current.value,\r\n            email: emailRef.current.value,\r\n            studyProgram: \"\",\r\n            city: \"\",\r\n            nationality: \"\",\r\n            interests: \"\",\r\n            photoURL: \"\",\r\n          };\r\n\r\n          // Create an user entry in Firebase Realtime Database\r\n          db.ref(`/users/${registeredUser.user.uid}`).set(userData);\r\n\r\n          currentUserID = registeredUser.user.uid\r\n        }\r\n      );\r\n\r\n       // Redirect to home page\r\n       history.push(`/discuss`);\r\n\r\n    } catch (error) {\r\n      console.log(\"Auth error: \", error);\r\n      setError(error.message);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.form_container}>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n          <Form onSubmit={(e) => handleSubmit(e)}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"firstName\">\r\n              <Form.Label>First name</Form.Label>\r\n              <Form.Control type=\"text\" ref={firstNameRef} required />\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"lastName\">\r\n              <Form.Label>Last name</Form.Label>\r\n              <Form.Control type=\"text\" ref={lastNameRef} required />\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"username\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control type=\"text\" ref={usernameRef} required />\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required />\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Confirm password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n            </Form.Group>\r\n\r\n            <Button\r\n              disabled={isLoading}\r\n              className=\"w-100 btn-purple-rounded\"\r\n              type=\"submit\"\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Already have an account? <Link to=\"/login\">Log In</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\AuthForms\\Login.js",[],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\User\\Profile.js",["112","113","114","115"],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\User\\PrivateRoute.js",[],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\AuthForms\\ForgotPassword.js",[],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\axios.js",[],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\User\\UpdateProfile.js",["116","117","118","119","120","121"],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\shared\\sharedFunctions.js",[],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\Discussions.js",["122","123"],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\Categories.js",["124"],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\DiscussionBox.js",["125"],"import React, { useEffect, useState } from \"react\";\r\nimport classes from \"./Discussions.module.scss\";\r\nimport axios from \"../../axios\";\r\nimport account_image from \"../../assets/account/account_icon_purple.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst DiscussionBox = (props) => {\r\n  const [authorData, setAuthorData] = useState();\r\n\r\n  useEffect(async () => {\r\n    // Fetch author data from Firebase\r\n    await axios\r\n      .get(`/users/${props.authorID}.json`)\r\n      .then((userData) => {\r\n        // Set user data state\r\n        setAuthorData(userData.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error in fetching author data: \", err);\r\n      });\r\n  }, [props]);\r\n\r\n  // Display only 20 words of the initial comment\r\n  let commentToBeDisplayed = props.initialComment.split(\" \");\r\n  commentToBeDisplayed.splice(20, commentToBeDisplayed.length - 1);\r\n\r\n  let discussionBoxClasses = [\r\n    \"row px-2 py-3 mx-0  rounded \",\r\n    classes.dicussion_box,\r\n  ];\r\n\r\n  return (\r\n    <div className={discussionBoxClasses.join(\" \")}>\r\n      <div className=\"col-lg-3 row text-center\">\r\n        <div className=\"col-3 col-lg-12 \">\r\n          <Link\r\n            to={`/profile/` + props.authorID}\r\n            className=\"my-1 h5 text-decoration-none black\"\r\n          >\r\n            <img\r\n              src={\r\n                authorData\r\n                  ? authorData.photoURL !== \"\"\r\n                    ? authorData.photoURL\r\n                    : account_image\r\n                  : account_image\r\n              }\r\n              className={classes.discussion_box_image}\r\n              alt=\"img\"\r\n            />\r\n          </Link>\r\n        </div>\r\n        <div className=\"col-7 col-lg-12 text-center mb-auto\">\r\n          <Link\r\n            to={`/profile/` + props.authorID}\r\n            className=\"my-1 h5 text-decoration-none black \"\r\n          >\r\n            {authorData && authorData.username}\r\n          </Link>\r\n          <p className=\"my-1 \">{authorData && authorData.studyProgram}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-lg-9 p-0 h-100\">\r\n        <div className=\"d-md-flex justify-content-between my-2 my-md-0 \">\r\n          <h3 className=\"pr-md-0 h3\">{props.title}</h3>\r\n          <p className=\"\">\r\n            <span className=\"badge badge-primary purple-badge  ml-1 px-3 py-2\">\r\n              {props.category}\r\n            </span>\r\n          </p>\r\n        </div>\r\n        <p className=\"my-2 gray-font\" >{commentToBeDisplayed.join(\" \")}...</p>\r\n        <div className=\"d-flex justify-content-between\">\r\n          <Link\r\n            to={\"/discussion/\" + props.discussionID}\r\n            className=\"btn btn-link purple p-0 my-0\"\r\n          >\r\n            Read more\r\n          </Link>\r\n          <div className=\"icons my-0 text-muted\">\r\n            <span className=\"mx-2\">\r\n              <i className=\"far fa-comment-alt mx-1\"></i>\r\n              {props.comments ? props.comments.length : \"0\"}\r\n            </span>\r\n            <span className=\"mx-2\">\r\n              <i className=\"far fa-heart mx-1\"></i>\r\n              {props.likes}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiscussionBox;\r\n","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\DiscussionForm.js",["126","127","128"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport classes from \"./Discussions.module.scss\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport axios from \"../../axios\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\n\r\nconst DiscussionForm = () => {\r\n  const { currentUser } = useAuth();\r\n  const [userData, setUserData] = useState();\r\n  const history = useHistory();\r\n\r\n  const categoryList = [\"COVID-19\", \"Arts\", \"Communications\", \"Business\", \"Engineering\", \"Healthcare\", \"ICT\", \"Logistics\", \"International\", \"Intership\", \"Other\",]\r\n\r\n  const titleRef = useRef();\r\n  const categoryRef = useRef();\r\n  const commentRef = useRef();\r\n\r\n  // Fetch data from Firebase Realtime Database\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/users/${currentUser.uid}.json`)\r\n      .then((userData) => {\r\n        // Set user data state\r\n        setUserData(userData.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error in fetching data from Firebase\", err);\r\n      });\r\n  }, []);\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Discussion entry data that will be saved to Firebase Realtime Database\r\n    let newDiscussionEntry = {\r\n      discussionID: \"\",\r\n      title: titleRef.current.value,\r\n      category: categoryRef.current.value,\r\n      initialComment: commentRef.current.value,\r\n      datePosted: new Date,\r\n      comments: [],\r\n      authorID: currentUser.uid,\r\n      likes: 0,\r\n      likedBy: []\r\n\r\n    };\r\n\r\n    // Push discussion entry to Firebase Realtime Database\r\n    await axios.post(`/discussions.json`, newDiscussionEntry)\r\n      .then( async(response) => {\r\n        // Get discussion ID from Firebase and make a put request to update it\r\n        let newDiscussionEntryWithID = {...newDiscussionEntry}\r\n\r\n        newDiscussionEntryWithID.discussionID = response.data.name;\r\n\r\n        await axios.put(`/discussions/${response.data.name}.json`, newDiscussionEntryWithID).then(\r\n          (response) => {\r\n            // console.log(\"Response from put request: \", response)\r\n          }\r\n        ).catch((err) => {\r\n          console.log(\"Error from put request: \", err)\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error in post request to Firebase Realtime Databse\", err);\r\n      });\r\n\r\n    // Redirect to home page\r\n    history.push(\"/discuss\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.discussion_form_container}>\r\n      <Link className=\"text-decoration-none\" to=\"discuss\"><i className=\"fas fa-angle-left mr-1\"></i>Back</Link>\r\n      <h1 className=\"mb-3\">Add a discussion</h1>\r\n      <form onSubmit={handleFormSubmit} className=\"\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <Form.Group id=\"discussion-form-title\"> \r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                ref={titleRef}\r\n                type=\"text\"\r\n                placeholder=\"Title of discussion\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <Form.Group controlId=\"discussion-form-category\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control as=\"select\" ref={categoryRef}>\r\n                {categoryList.map(category =>{\r\n                  return <option key={category}>{category}</option>\r\n                })}\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </div>\r\n\r\n          <div className=\"col-md-12\">\r\n            <Form.Group controlId=\"discussion-form-initial-comment\">\r\n              <Form.Label>Comment</Form.Label>\r\n              <Form.Control ref={commentRef} as=\"textarea\" rows={3} required />\r\n            </Form.Group>\r\n          </div>\r\n        </div>\r\n        <div className=\"submit-btn\">\r\n          <button type=\"submit\" className=\"btn btn-purple-rounded\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiscussionForm;\r\n","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\DiscussionDetail\\DiscussionDetail.js",["129","130","131"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport classes from \"../Discussions.module.scss\";\r\nimport axios from \"../../../axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { useAuth } from \"../../../Context/AuthContext\";\r\nimport DiscussionComment from \"./DiscussionComment\";\r\nimport account_image from \"../../../assets/account/account_icon_purple.png\";\r\n\r\n// DayJS\r\nimport dayjs from \"dayjs\";\r\n\r\nconst DiscussionDetail = (props) => {\r\n  const { currentUser } = useAuth();\r\n  const [userData, setUserData] = useState();\r\n  const [discussionData, setDiscussionData] = useState({});\r\n  const [isDiscussionLiked, setIsDiscussionLiked] = useState(false);\r\n\r\n  // Alert and error\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const [show, setShow] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const commentInputRef = useRef();\r\n\r\n  // Fetch discussion data from Firebase Realtime Database\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/discussions/${props.match.params.id}.json`)\r\n      .then((response) => {\r\n        // Update state\r\n        setDiscussionData(response.data);\r\n\r\n        let likedBy = response.data.likedBy;\r\n\r\n        if (likedBy !== undefined) {\r\n          if (likedBy.includes(currentUser.uid)) {\r\n            // console.log(discussionData.likedBy.includes(currentUser.uid))\r\n            setIsDiscussionLiked(true);\r\n          } else {\r\n            // console.log(discussionData.likedBy.includes(currentUser.uid))\r\n            setIsDiscussionLiked(false);\r\n          }\r\n        }\r\n      })\r\n      .then(() => {\r\n        // Fetch user data from Firebase\r\n        axios\r\n          .get(`/users/${currentUser.uid}.json`)\r\n          .then((userData) => {\r\n            // Set user data state\r\n            setUserData(userData.data);\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"err\", err);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in fetching discussion data: \", error);\r\n      });\r\n  }, []);\r\n\r\n  const postComment = async () => {\r\n    // Reset error and alert\r\n    setError(\"\");\r\n    setAlertMessage(\"\");\r\n    setShow(true);\r\n\r\n    // Get the comment text from from\r\n    const comment = commentInputRef.current.value;\r\n\r\n    // Validation\r\n    if (comment === \"\") {\r\n      setError(\"Comment field must not be empty\");\r\n    } else {\r\n      let newDiscussionData = { ...discussionData };\r\n\r\n      // Check whether comments field exists\r\n      if (newDiscussionData.comments) {\r\n        // Remove initial \"none\" comment entry if it exists\r\n        if (newDiscussionData.comments[0] === \"none\") {\r\n          newDiscussionData.comments.splice(0, 1);\r\n        }\r\n      } else {\r\n        // Add a comments field if it doesn't existing\r\n        newDiscussionData = {\r\n          ...newDiscussionData,\r\n          comments: [],\r\n        };\r\n      }\r\n\r\n      // Initialize comment object\r\n      let newCommentEntry = {\r\n        comment: comment,\r\n        authorID: userData.userID,\r\n        datePosted: new Date(),\r\n      };\r\n\r\n      // Push comment to comments array\r\n      newDiscussionData.comments.push(newCommentEntry);\r\n\r\n      // Make a put request to update discussion comments data\r\n      await axios\r\n        .put(`/discussions/${props.match.params.id}.json`, newDiscussionData)\r\n        .then((response) => {\r\n          //   console.log(\"Response from put request: \", response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error in fetching discussion data: \", error);\r\n        });\r\n\r\n      setAlertMessage(\"You successfuly posted your comment\");\r\n\r\n      // Reset field\r\n      commentInputRef.current.value = \"\";\r\n\r\n      // Update state\r\n      setDiscussionData(newDiscussionData);\r\n    }\r\n  };\r\n\r\n  // Sort discussions by date - most recent first\r\n  let sortedCommentsByDate = [];\r\n\r\n  if (discussionData.comments) {\r\n    sortedCommentsByDate = discussionData.comments\r\n      .slice()\r\n      .sort((a, b) => new Date(b.datePosted) - new Date(a.datePosted));\r\n  }\r\n\r\n  const likeDiscussion = () => {\r\n    // Get discussion data\r\n    let newDiscussionData = { ...discussionData };\r\n\r\n    // Update liked by users array\r\n    if (newDiscussionData.likedBy !== undefined) {\r\n      const idxUserInLikedBy = newDiscussionData.likedBy.indexOf(\r\n        currentUser.uid\r\n      );\r\n\r\n      // Remove user ID from likedBy array\r\n      if (idxUserInLikedBy != -1 && isDiscussionLiked === true) {\r\n        newDiscussionData.likedBy.splice(idxUserInLikedBy, 1);\r\n\r\n        newDiscussionData.likes -= 1;\r\n      } else if (isDiscussionLiked === false) {\r\n        // Push user ID to likedBy list\r\n        newDiscussionData.likedBy.push(currentUser.uid);\r\n        newDiscussionData.likes += 1;\r\n      }\r\n    } else {\r\n      // Add a likedBy array to newDiscussionData object\r\n      if (newDiscussionData.likedBy === undefined) {\r\n        newDiscussionData = {\r\n          ...newDiscussionData,\r\n          likedBy: [],\r\n        };\r\n      }\r\n\r\n      // Add user ID to likedBy list if this is first like\r\n      if (isDiscussionLiked === false) {\r\n        newDiscussionData.likedBy.push(currentUser.uid);\r\n\r\n        newDiscussionData.likes += 1;\r\n      }\r\n    }\r\n\r\n    //Update state\r\n    setIsDiscussionLiked(!isDiscussionLiked);\r\n    setDiscussionData(newDiscussionData);\r\n\r\n    // Push new discussion data to Firebase Realtime Database\r\n    // Make a put request to update discussion likes\r\n    axios\r\n      .put(`/discussions/${props.match.params.id}.json`, newDiscussionData)\r\n      .then((response) => {\r\n        //   console.log(\"Response from put request: \", response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in fetching discussion data: \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.discussion_detail_container}>\r\n      <Link className=\"text-decoration-none \" to=\"/discuss\">\r\n        <i className=\"fas fa-angle-left mr-1\"></i>Back\r\n      </Link>\r\n      <div className=\"rounded mb-2 px-2 py-1 row\">\r\n        <div className=\"w-100 my-2 my-md-0\">\r\n          <h1 className=\"w-100 mb-2 pb-2 pr-md-0 border-bottom\">\r\n            {discussionData.title}\r\n          </h1>\r\n          <div className=\"d-flex justify-content-between text-muted\">\r\n            <div className=\"discussion-info\">\r\n              <span className=\"mr-2\">\r\n                <span className=\"badge badge-primary purple-badge ml-1 px-3 py-2\">\r\n                  {discussionData.category}\r\n                </span>\r\n              </span>\r\n              <span className=\"mx-3\">\r\n                {dayjs(discussionData.datePosted).format(\"MMM DD, YYYY\")}\r\n              </span>\r\n            </div>\r\n\r\n            <span className=\"\">\r\n              <i\r\n                onClick={() => likeDiscussion()}\r\n                className={\r\n                  isDiscussionLiked\r\n                    ? \"fas fa-heart red like-btn mx-1\"\r\n                    : \"far fa-heart like-btn mx-1\"\r\n                }\r\n              ></i>\r\n              {discussionData.likes === 1\r\n                ? discussionData.likes + \" like\"\r\n                : discussionData.likes + \" likes\"}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Initial comment */}\r\n        <div class=\"w-100\">\r\n          <DiscussionComment commentData={discussionData} />\r\n        </div>\r\n\r\n        <div className=\"comment-form row w-100 mx-auto my-1\">\r\n          {alertMessage !== \"\" && show ? (\r\n            <Alert\r\n              className=\"col-12 mx-auto\"\r\n              variant=\"success\"\r\n              onClose={() => setShow(false)}\r\n              dismissible\r\n            >\r\n              {alertMessage}\r\n            </Alert>\r\n          ) : null}\r\n          {error !== \"\" && show ? (\r\n            <Alert\r\n              className=\"col-12 mx-auto\"\r\n              variant=\"danger\"\r\n              onClose={() => setShow(false)}\r\n              dismissible\r\n            >\r\n              {error}\r\n            </Alert>\r\n          ) : null}\r\n          <div className=\"col-md-2 mb-1\">\r\n            <div className=\"mx-md-auto d-flex d-md-block justify-content-start \">\r\n              <Link\r\n                to={`/profile/` + currentUser.uid}\r\n                className=\"  text-decoration-none black-text d-block\"\r\n              >\r\n                <div className=\"text-center mr-2 mr-md-0 \">\r\n                  <img\r\n                    src={\r\n                      userData\r\n                        ? userData.photoURL !== \"\"\r\n                          ? userData.photoURL\r\n                          : account_image\r\n                        : account_image\r\n                    }\r\n                    className={classes.discussion_box_image}\r\n                    alt=\"img\"\r\n                  />\r\n                </div>\r\n                <div className=\"text-center my-auto\">\r\n                  <p className=\"text-muted mt-1 h5 black-text\">\r\n                    {userData && userData.username}\r\n                  </p>\r\n                </div>\r\n              </Link>\r\n              <Link\r\n                to={`/profile/` + currentUser.uid}\r\n                className=\"  text-decoration-none black-text d-block\"\r\n              ></Link>\r\n            </div>\r\n          </div>\r\n          <div className=\" col-md-10\">\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Comment</Form.Label>\r\n              <Form.Control ref={commentInputRef} as=\"textarea\" readonly rows={3} />\r\n            </Form.Group>\r\n            <Button onClick={postComment} className=\"btn-purple-rounded\">\r\n              Post\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"comments my-5 w-100\">\r\n          <div className=\" pb-2 border-bottom w-100\">\r\n            <span className=\"text-muted text-middle\">\r\n              <i className=\"far fa-comment-alt mx-1\"></i>\r\n              {discussionData.comments\r\n                ? discussionData.comments.length !== 1\r\n                  ? discussionData.comments.length + \" comments\"\r\n                  : discussionData.comments.length + \" comment\"\r\n                : \"0 comments\"}\r\n            </span>\r\n          </div>\r\n          <div className=\"comments\">\r\n            {discussionData.comments !== [] ? (\r\n              sortedCommentsByDate.map((commentData) => {\r\n                return (\r\n                  <DiscussionComment\r\n                    key={commentData.datePosted}\r\n                    commentData={commentData}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <p>No comments yet</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiscussionDetail;\r\n","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\DiscussionDetail\\DiscussionComment.js",["132","133"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classes from \"../Discussions.module.scss\";\r\nimport axios from \"../../../axios\";\r\nimport dayjs from \"dayjs\";\r\nimport account_image from \"../../../assets/account/account_icon_purple.png\";\r\n\r\nconst DiscussionComment = (props) => {\r\n  const [authorData, setAuthorData] = useState();\r\n\r\n  useEffect(async () => {\r\n    // Fetch author data from Firebase\r\n    await axios\r\n      .get(`/users/${props.commentData.authorID}.json`)\r\n      .then((userData) => {\r\n        // Set user data state\r\n        setAuthorData(userData.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error in fetching author data: \", err);\r\n      });\r\n  }, [props]);\r\n\r\n  const initialComment = props.commentData.initialComment;\r\n  const datePostedFormatted = dayjs(props.commentData.datePosted).format(\r\n    \"MMM DD, YYYY\"\r\n  );\r\n\r\n  return (\r\n    <div className=\"comment row border-bottom pb-3 my-4 mx-auto\">\r\n      <div className=\"col-md-2 mb-2\">\r\n        <div className=\"mx-md-auto d-flex d-md-block justify-content-start \">\r\n          <div className=\"text-center mr-2 mr-md-0\">\r\n            <Link\r\n              to={`/profile/` + props.commentData.authorID}\r\n              className=\"my-1 h5 text-decoration-none \"\r\n            >\r\n              <img\r\n                src={\r\n                  authorData\r\n                    ? authorData.photoURL !== \"\"\r\n                      ? authorData.photoURL\r\n                      : account_image\r\n                    : account_image\r\n                }\r\n                className={classes.discussion_box_image}\r\n                alt=\"profile image\"\r\n              />\r\n            </Link>\r\n          </div>\r\n          <div className=\"text-center my-auto\">\r\n            <Link\r\n              to={`/profile/` + props.commentData.authorID}\r\n              className=\"my-2 h5 text-muted text-decoration-none black-text d-block\"\r\n            >\r\n              {authorData && authorData.username}\r\n            </Link>\r\n            <span className=\"mx-auto text-muted\">{datePostedFormatted}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-10\">\r\n        <p className=\"my-2 gray-font\" >\r\n          {initialComment ? initialComment : props.commentData.comment}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiscussionComment;\r\n","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Home\\Homepage.js",["134","135","136"],"import React from \"react\";\r\nimport classes from \"./Homepage.module.scss\";\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport homeImageOne from \"../../assets/images/deskImage.svg\";\r\nimport homeImageTwo from \"../../assets/images/socialImage.png\";\r\nimport homeImageThree from \"../../assets/images/phoneImage.png\";\r\n\r\nconst Homepage = () => {\r\n  const { currentUser } = useAuth();\r\n\r\n  let jumbotronParagraphClasses = [\r\n    \"col-md-6 mx-auto my-5 line-height\",\r\n    classes.jumbotron_paragraph,\r\n  ];\r\n\r\n  return (\r\n    <div className=\"my-4 \">\r\n      <div className={classes.jumbotron}>\r\n        <h1 className=\"mt-5\">\r\n          The real information source for <span className=\"purple\">Fontys</span>{\" \"}\r\n          students\r\n        </h1>\r\n        <p className={jumbotronParagraphClasses.join(\" \")}>\r\n          Our goal is to bring Fontys students and teachers together and allow them to\r\n          share insights and relevant information about their studies and social\r\n          life.\r\n        </p>\r\n      </div>\r\n      <div className=\"w-80 mx-auto\">\r\n        <div class=\"row my-5  \">\r\n          <div class=\"col-md-6 my-4 text-center\">\r\n            <img\r\n              src={homeImageOne}\r\n              className={classes.info_image}\r\n              alt=\"working man image\"\r\n            />\r\n          </div>\r\n          <div class=\"col-md-6 my-4 text-center my-auto\">\r\n            <h2 className=\"font-weight-semibold text-center mb-3 \">\r\n              Set Up Your Profile\r\n            </h2>\r\n            <p className=\"col-md-10 offset-md-1 line-height\">\r\n              Hey! Are you a current attendee at Fontys? If this is the case, we\r\n              would highly recommend you join our growing community. Sign up and\r\n              set up your profile with information about your studies and\r\n              interests. By doing so you will give others the opportunity to get\r\n              to know you better.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div class=\"row my-5\">\r\n          <div class=\"col-md-6 order-md-2 my-4 text-center\">\r\n            <img\r\n              src={homeImageTwo}\r\n              className={classes.info_image}\r\n              alt=\"computer image\"\r\n            />\r\n          </div>\r\n          <div class=\"col-md-6 order-md-1 my-4 text-center my-auto\">\r\n            <h2 className=\"font-weight-semibold text-center mb-3\">\r\n              Browse Around\r\n            </h2>\r\n            <p className=\"col-md-10 offset-md-1 line-height\">\r\n              Once you’ve set up your profile, why don’t you take a look around?\r\n              See what discussions have been recently published. Who knows,\r\n              maybe you’ll find something to your liking!\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div class=\"row my-5\">\r\n          <div class=\"col-md-6 my-4 text-center\">\r\n            <img\r\n              src={homeImageThree}\r\n              className={classes.info_image}\r\n              alt=\"phone image\"\r\n            />\r\n          </div>\r\n          <div class=\"col-md-6  text-center my-auto\">\r\n            <h2 className=\"font-weight-semibold mb-3\">Join the Discussion</h2>\r\n            <p className=\"col-md-10 offset-md-1 line-height mb-5\">\r\n              Do you want to ask somebody about something regarding your\r\n              studies? Why don’t you post your first discussion? All questions\r\n              you may have are welcomed by our community.\r\n            </p>\r\n            {currentUser ? (\r\n              <Link\r\n                to=\"/discuss\"\r\n                class=\"col-md-10 btn btn-purple-rounded w-100\"\r\n              >\r\n                Go to discussions\r\n              </Link>\r\n            ) : (\r\n              <Link to=\"/signup\" class=\"btn btn-purple-rounded w-100\">\r\n                Sign up\r\n              </Link>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Footer\\Footer.js",[],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Navbar\\Searchbar.js",["137","138","139","140"],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\User\\interests.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":1,"column":38,"nodeType":"147","messageId":"148","endLine":1,"endColumn":45},{"ruleId":"145","severity":1,"message":"149","line":3,"column":10,"nodeType":"147","messageId":"148","endLine":3,"endColumn":12},{"ruleId":"145","severity":1,"message":"150","line":12,"column":3,"nodeType":"147","messageId":"148","endLine":12,"endColumn":14},{"ruleId":"145","severity":1,"message":"151","line":14,"column":3,"nodeType":"147","messageId":"148","endLine":14,"endColumn":7},{"ruleId":"152","severity":1,"message":"153","line":149,"column":9,"nodeType":"154","endLine":149,"endColumn":23},{"ruleId":"145","severity":1,"message":"155","line":1,"column":35,"nodeType":"147","messageId":"148","endLine":1,"endColumn":44},{"ruleId":"145","severity":1,"message":"156","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":13},{"ruleId":"145","severity":1,"message":"157","line":31,"column":19,"nodeType":"147","messageId":"148","endLine":31,"endColumn":30},{"ruleId":"145","severity":1,"message":"158","line":70,"column":11,"nodeType":"147","messageId":"148","endLine":70,"endColumn":24},{"ruleId":"145","severity":1,"message":"151","line":7,"column":16,"nodeType":"147","messageId":"148","endLine":7,"endColumn":20},{"ruleId":"159","severity":1,"message":"160","line":35,"column":6,"nodeType":"161","endLine":35,"endColumn":8,"suggestions":"162"},{"ruleId":"145","severity":1,"message":"163","line":51,"column":7,"nodeType":"147","messageId":"148","endLine":51,"endColumn":22},{"ruleId":"164","severity":1,"message":"165","line":70,"column":17,"nodeType":"166","endLine":79,"endColumn":18},{"ruleId":"145","severity":1,"message":"150","line":17,"column":3,"nodeType":"147","messageId":"148","endLine":17,"endColumn":14},{"ruleId":"145","severity":1,"message":"167","line":18,"column":3,"nodeType":"147","messageId":"148","endLine":18,"endColumn":10},{"ruleId":"145","severity":1,"message":"168","line":56,"column":24,"nodeType":"147","messageId":"148","endLine":56,"endColumn":35},{"ruleId":"159","severity":1,"message":"169","line":74,"column":6,"nodeType":"161","endLine":74,"endColumn":8,"suggestions":"170"},{"ruleId":"145","severity":1,"message":"171","line":310,"column":9,"nodeType":"147","messageId":"148","endLine":310,"endColumn":21},{"ruleId":"172","severity":1,"message":"173","line":342,"column":17,"nodeType":"166","endLine":354,"endColumn":18},{"ruleId":"145","severity":1,"message":"149","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":12},{"ruleId":"174","severity":1,"message":"175","line":18,"column":3,"nodeType":"176","messageId":"177","endLine":57,"endColumn":4},{"ruleId":"178","severity":1,"message":"179","line":45,"column":34,"nodeType":"180","messageId":"181","endLine":45,"endColumn":36},{"ruleId":"159","severity":1,"message":"182","line":10,"column":13,"nodeType":"183","endLine":21,"endColumn":4},{"ruleId":"145","severity":1,"message":"184","line":11,"column":10,"nodeType":"147","messageId":"148","endLine":11,"endColumn":18},{"ruleId":"159","severity":1,"message":"169","line":31,"column":6,"nodeType":"161","endLine":31,"endColumn":8,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":42,"column":19,"nodeType":"188","messageId":"189","endLine":42,"endColumn":27,"fix":"190"},{"ruleId":"145","severity":1,"message":"191","line":4,"column":16,"nodeType":"147","messageId":"148","endLine":4,"endColumn":26},{"ruleId":"159","severity":1,"message":"192","line":61,"column":6,"nodeType":"161","endLine":61,"endColumn":8,"suggestions":"193"},{"ruleId":"178","severity":1,"message":"194","line":142,"column":28,"nodeType":"180","messageId":"181","endLine":142,"endColumn":30},{"ruleId":"159","severity":1,"message":"182","line":11,"column":13,"nodeType":"183","endLine":22,"endColumn":4},{"ruleId":"172","severity":1,"message":"173","line":38,"column":15,"nodeType":"166","endLine":48,"endColumn":17},{"ruleId":"172","severity":1,"message":"173","line":34,"column":13,"nodeType":"166","endLine":38,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":55,"column":13,"nodeType":"166","endLine":59,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":74,"column":13,"nodeType":"166","endLine":78,"endColumn":15},{"ruleId":"145","severity":1,"message":"195","line":1,"column":38,"nodeType":"147","messageId":"148","endLine":1,"endColumn":44},{"ruleId":"159","severity":1,"message":"196","line":45,"column":6,"nodeType":"161","endLine":45,"endColumn":8,"suggestions":"197"},{"ruleId":"172","severity":1,"message":"173","line":98,"column":23,"nodeType":"166","endLine":106,"endColumn":25},{"ruleId":"178","severity":1,"message":"194","line":100,"column":43,"nodeType":"180","messageId":"181","endLine":100,"endColumn":45},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'db' is defined but never used.","'FormControl' is defined but never used.","'Form' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useEffect' is defined but never used.","'axios' is defined but never used.","'currentUser' is assigned a value but never used.","'currentUserID' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser' and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["200"],"'defaultImageURL' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Spinner' is defined but never used.","'updateEmail' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.",["201"],"'interestList' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'userData' is assigned a value but never used.",["202"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"203","text":"204"},"'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser.uid' and 'props.match.params.id'. Either include them or remove the dependency array.",["205"],"Expected '!==' and instead saw '!='.","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.",["206"],"no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"209","fix":"211"},[1427,1427],"()",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [currentUser, props.match.params.id]",{"range":"216","text":"217"},"Update the dependencies array to be: [currentUser.uid]",{"range":"218","text":"219"},{"range":"220","text":"219"},"Update the dependencies array to be: [currentUser.uid, props.match.params.id]",{"range":"221","text":"222"},"Update the dependencies array to be: [currentUser]",{"range":"223","text":"224"},[997,999],"[currentUser, props.match.params.id]",[2260,2262],"[currentUser.uid]",[1056,1058],[2088,2090],"[currentUser.uid, props.match.params.id]",[1530,1532],"[currentUser]"]