[{"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\index.js":"1","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Navbar\\Navbar.js":"2","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\App.js":"3","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\Context\\AuthContext.js":"4","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\firebase.js":"5","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\AuthForms\\Signup.js":"6","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\AuthForms\\Login.js":"7","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\User\\Profile.js":"8","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\User\\PrivateRoute.js":"9","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\AuthForms\\ForgotPassword.js":"10","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\axios.js":"11","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\User\\UpdateProfile.js":"12","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\shared\\sharedFunctions.js":"13","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\Discussions.js":"14","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\Categories.js":"15","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\DiscussionBox.js":"16","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\DiscussionForm.js":"17","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\DiscussionDetail\\DiscussionDetail.js":"18","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\DiscussionDetail\\DiscussionComment.js":"19","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Home\\Homepage.js":"20"},{"size":220,"mtime":1608239004189,"results":"21","hashOfConfig":"22"},{"size":3424,"mtime":1610541850442,"results":"23","hashOfConfig":"22"},{"size":1832,"mtime":1610544744111,"results":"24","hashOfConfig":"22"},{"size":1853,"mtime":1608373511977,"results":"25","hashOfConfig":"22"},{"size":780,"mtime":1608646294533,"results":"26","hashOfConfig":"22"},{"size":4146,"mtime":1608561343634,"results":"27","hashOfConfig":"22"},{"size":2315,"mtime":1608383594827,"results":"28","hashOfConfig":"22"},{"size":5091,"mtime":1610542000792,"results":"29","hashOfConfig":"22"},{"size":473,"mtime":1608289055036,"results":"30","hashOfConfig":"22"},{"size":2182,"mtime":1608383692193,"results":"31","hashOfConfig":"22"},{"size":173,"mtime":1608482558732,"results":"32","hashOfConfig":"22"},{"size":13641,"mtime":1610541745388,"results":"33","hashOfConfig":"22"},{"size":824,"mtime":1609010293349,"results":"34","hashOfConfig":"22"},{"size":2534,"mtime":1610477157717,"results":"35","hashOfConfig":"22"},{"size":1447,"mtime":1610140823196,"results":"36","hashOfConfig":"22"},{"size":2751,"mtime":1610475594636,"results":"37","hashOfConfig":"22"},{"size":4036,"mtime":1610475375930,"results":"38","hashOfConfig":"22"},{"size":8935,"mtime":1610542213124,"results":"39","hashOfConfig":"22"},{"size":1795,"mtime":1610360346490,"results":"40","hashOfConfig":"22"},{"size":2347,"mtime":1610546442333,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"2eaqnv",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"44"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"44"},"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\index.js",[],["96","97"],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Navbar\\Navbar.js",["98","99"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from '../../axios'\r\n\r\n//React Router\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Style\r\nimport {\r\n  Navbar,\r\n  NavDropdown,\r\n  FormControl,\r\n  Nav,\r\n  Form,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport classes from \"./Navbar.module.scss\";\r\nimport account_icon from \"../../assets/account/account_icon_purple.png\";\r\n\r\n// Auth\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\n\r\nconst Navigationbar = () => {\r\n  const { currentUser, logout } = useAuth();\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [userData, setUserData] = useState();\r\n  \r\n\r\n  let togglerClasses = [];\r\n  let collapseClasses = [];\r\n\r\n  useEffect(() => {\r\n    if(currentUser){\r\n      axios\r\n        .get(`/users/${currentUser.uid}.json`)\r\n        .then((userData) => {\r\n          // Set user data state\r\n          setUserData(userData.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"Error in fetching data from Firebase\", err);\r\n        });\r\n\r\n    }\r\n  }, [currentUser, userData])\r\n\r\n  let navItems = (\r\n    <Nav className=\"ml-auto\">\r\n      <Link\r\n        onClick={() => setExpanded(false)}\r\n        className={classes.btn_login}\r\n        to=\"/login\"\r\n      >\r\n        Login\r\n      </Link>\r\n      <Link\r\n        onClick={() => setExpanded(false)}\r\n        className={classes.btn_signup}\r\n        to=\"/signup\"\r\n      >\r\n        Sign up\r\n      </Link>\r\n    </Nav>\r\n  );\r\n\r\n  if (currentUser) {\r\n    navItems = (\r\n      <Nav className=\"ml-auto \">\r\n        <Link\r\n            onClick={() => setExpanded(false)}\r\n            className=\"nav-link\"\r\n            to=\"/discuss\"\r\n          >\r\n            Discuss\r\n          </Link>\r\n        <NavDropdown\r\n          title={\r\n            <div className=\"d-inline \">\r\n              <img\r\n                className={classes.account_icon}\r\n                src={userData ? userData.photoURL !== \"\" ? userData.photoURL : account_icon : account_icon}\r\n                alt=\"account icon\"\r\n                width=\"45px\"\r\n                height=\"45px\"\r\n              />\r\n              <span className=\"mr-1\">{userData ? userData.username : \"Profile\"}</span>\r\n            </div>\r\n          }\r\n          id=\"basic-nav-dropdown\"\r\n        >\r\n          <Link\r\n            onClick={() => setExpanded(false)}\r\n            className=\"dropdown-item\"\r\n            to={`/profile/` + currentUser.uid}\r\n          >\r\n            Profile\r\n          </Link>\r\n          <Link\r\n            onClick={() => setExpanded(false)}\r\n            className=\"dropdown-item\"\r\n            to=\"/\"\r\n          >\r\n            Help\r\n          </Link>\r\n          <NavDropdown.Divider />\r\n          <div class=\"ml-2\">\r\n          <Button className=\"btn-danger btn-cancel\" onClick={() => logout()}>Log out</Button>\r\n\r\n          </div>\r\n        </NavDropdown>\r\n      </Nav>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Navbar expanded={expanded} className={classes.navbar} expand=\"lg\">\r\n      <Link className={classes.logo} to=\"/\">\r\n        WeFontys\r\n      </Link>\r\n      <Navbar.Toggle\r\n        onClick={() => setExpanded(expanded ? false : \"expanded\")}\r\n        className={togglerClasses.join(\" \")}\r\n        aria-controls=\"basic-navbar-nav\"\r\n      />\r\n      <Navbar.Collapse\r\n        className={collapseClasses.join(\" \")}\r\n        id=\"basic-navbar-nav\"\r\n      >\r\n        {navItems}\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigationbar;\r\n","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\App.js",[],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\Context\\AuthContext.js",[],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\firebase.js",[],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\AuthForms\\Signup.js",["100","101","102"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport axios from \"../../axios\";\r\n// Style\r\nimport { Card, Button, Form, Alert } from \"react-bootstrap\";\r\nimport classes from \"./AuthForms.module.scss\";\r\n\r\n// Auth\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\n\r\n// React Router\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst Signup = () => {\r\n  // State\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // React router history\r\n  const history = useHistory();\r\n\r\n  // Form fields references\r\n  const emailRef = useRef();\r\n  const lastNameRef = useRef();\r\n  const firstNameRef = useRef();\r\n  const usernameRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n\r\n  // Signup function from context\r\n  const { signup, currentUser } = useAuth();\r\n\r\n  async function handleSubmit(e) {\r\n    // Prevent page from refreshing\r\n    e.preventDefault();\r\n\r\n    // Validate form\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      // Set an error and exit out of function\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    try {\r\n      // Reset error message if it exists before signing up\r\n      setError(\"\");\r\n      setIsLoading(true);\r\n\r\n      await signup(emailRef.current.value, passwordRef.current.value).then(\r\n        (registeredUser) => {\r\n          // console.log(\"user\",registeredUser)\r\n\r\n          const userData = {\r\n            userID: registeredUser.user.uid,\r\n            firstName: firstNameRef.current.value,\r\n            lastName: lastNameRef.current.value,\r\n            username: usernameRef.current.value,\r\n            email: emailRef.current.value,\r\n            studyProgram: \"\",\r\n            city: \"\",\r\n            nationality: \"\",\r\n            interests: \"\",\r\n            photoURL: \"\",\r\n          };\r\n\r\n          // Create an user entry in Firebase Realtime Database\r\n          db.ref(`/users/${registeredUser.user.uid}`).set(userData);\r\n        }\r\n      );\r\n\r\n      // Redirect to home page\r\n      history.push(\"/\");\r\n\r\n    } catch (error) {\r\n      console.log(\"Auth error: \", error);\r\n      setError(\"Failed to sign up\");\r\n    }\r\n\r\n    setIsLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.form_container}>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n          <Form onSubmit={(e) => handleSubmit(e)}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"firstName\">\r\n              <Form.Label>First name</Form.Label>\r\n              <Form.Control type=\"text\" ref={firstNameRef} required />\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"lastName\">\r\n              <Form.Label>Last name</Form.Label>\r\n              <Form.Control type=\"text\" ref={lastNameRef} required />\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"username\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control type=\"text\" ref={usernameRef} required />\r\n            </Form.Group>\r\n\r\n\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required />\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Confirm password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n            </Form.Group>\r\n\r\n            <Button\r\n              disabled={isLoading}\r\n              className=\"w-100 btn-purple-rounded\"\r\n              type=\"submit\"\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Already have an account? <Link to=\"/login\">Log In</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\AuthForms\\Login.js",[],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\User\\Profile.js",["103","104","105","106"],"import React, { useState, useEffect } from \"react\";\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\nimport axios from \"../../axios\";\r\nimport account_icon from \"../../assets/account/account_icon_purple.png\";\r\n\r\n// Style\r\nimport { Card, Form, Button, Alert } from \"react-bootstrap\";\r\nimport classes from \"./Profile.module.scss\";\r\n\r\n// React Router\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = (props) => {\r\n  //State\r\n  const [error, setError] = useState(\"\");\r\n  const { currentUser, logout } = useAuth();\r\n\r\n  const [userData, setUserData] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  // Update user data from Firebase Realtime Database\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/users/${props.match.params.id}.json`)\r\n      .then((userData) => {\r\n        // Set user data state\r\n        setUserData(userData.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err\", err);\r\n      });\r\n  }, []);\r\n\r\n  async function handleLogout() {\r\n    // Clear existing error\r\n    setError(\"\");\r\n\r\n    try {\r\n      await logout();\r\n\r\n      // Redirect to home page\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n  }\r\n\r\n  let defaultImageURL = \"gs://wefontys.appspot.com/static/account_icon_purple.png\"\r\n\r\n  let accountImageClasses = [\"rounded-circle \", classes.account_image_main];\r\n\r\n  return (\r\n    <div className={classes.profile_container}>\r\n      <Link className=\"text-decoration-none \" to=\"/discuss\">\r\n        <i className=\"fas fa-angle-left mr-1 mb-3\"></i>Back\r\n      </Link>\r\n      <Card className={classes.profile_card}>\r\n        <Card.Body >\r\n          {/* <h2 className=\"text-center mb-4\">Profile</h2> */}\r\n\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n          <div className=\"row\">\r\n            <div class=\"col-md-4 text-center\">\r\n              <div className=\"my-3 \">\r\n                <img\r\n                  className={accountImageClasses.join(\" \")}\r\n                  src={userData ? userData.photoURL !== \"\" ? userData.photoURL : account_icon : account_icon}\r\n                ></img>\r\n              </div>\r\n              <div className=\"my-2 h6\">\r\n                {/* <strong>Name: </strong> */}\r\n                {userData && userData.firstName + \" \" + userData.lastName}\r\n              </div>\r\n              <div className=\"my-2\">\r\n                {/* <strong>Email: </strong> */}\r\n                {userData && userData.email}\r\n              </div>\r\n              {props.match.params.id === currentUser.uid ? (\r\n              <div className=\"my-4 \">\r\n                <Link\r\n                  to={`/profile/${props.match.params.id}/update-profile`}\r\n                  className=\"btn-purple-rounded text-decoration-none white\"\r\n                >\r\n                  Update profile\r\n                </Link>\r\n              </div>\r\n              ) : null}\r\n            </div>\r\n            <div class=\"col-md-8 mx-auto\">\r\n              <div class=\"col-12 px-0 h2 \">Profile info</div>\r\n              <div className=\"my-4\">\r\n                <strong>Userame: </strong>\r\n                {userData && userData.username}\r\n              </div>\r\n              <div className=\"my-4\">\r\n                <strong>Nationality: </strong>\r\n                {userData && userData.nationality}\r\n              </div>\r\n              <div className=\"my-4\">\r\n                <strong>City: </strong>\r\n                {userData && userData.city}\r\n              </div>\r\n              <div className=\"my-4\">\r\n                <strong>Study program: </strong>\r\n                {userData && userData.studyProgram}\r\n              </div>\r\n              <div className=\"my-4\">\r\n                <strong>Interests: </strong>\r\n                <div className=\"w-100 mx-auto my-3 row text-center\">\r\n                  {userData && userData.interests ? (\r\n                    userData.interests.map((interest) => (\r\n                      <div\r\n                        key={interest}\r\n                        className=\"interest-container col-6 col-xl-4  px-1 mt-1\"\r\n                      >\r\n                        <p key={interest} className={classes.interest_box}>\r\n                          {interest}\r\n                        </p>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <p className=\"text-muted\">\r\n                      You haven't selected any interests yet.\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12\">\r\n              {props.match.params.id === currentUser.uid ? (\r\n                <div className=\"text-center float-md-right mt-3\">\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={handleLogout}\r\n                    className=\"btn btn-danger btn-cancel\"\r\n                  >\r\n                    Logout\r\n                  </Button>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\User\\PrivateRoute.js",[],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\AuthForms\\ForgotPassword.js",[],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\axios.js",[],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\User\\UpdateProfile.js",["107","108","109","110","111","112"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport axios from \"../../axios\";\r\nimport account_image from \"../../assets/account/account_icon_purple.png\";\r\nimport { objectsAreTheSame } from \"../../shared/sharedFunctions\";\r\nimport { storage } from \"../../firebase\";\r\n\r\n// Style\r\nimport {\r\n  Card,\r\n  Button,\r\n  Form,\r\n  Alert,\r\n  InputGroup,\r\n  FormControl,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport classes from \"./Profile.module.scss\";\r\n\r\n// Auth\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\n\r\n// React Router\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst UpdateProfile = (props) => {\r\n  // State\r\n  const [userData, setUserData] = useState();\r\n  const [profileImageFile, setProfileImageFile] = useState();\r\n  const [profileImageURL, setProfileImageURL] = useState(\"\");\r\n  const [profileImagePreview, setProfileImagePreview] = useState();\r\n  const [interests, setInterests] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // React router history\r\n  const history = useHistory();\r\n\r\n  // Form fields references\r\n  const nameRef = useRef();\r\n  const usernameRef = useRef();\r\n  // const emailRef = useRef();\r\n  const nationalityRef = useRef();\r\n  const cityRef = useRef();\r\n  const studyProgramRef = useRef();\r\n  const interestRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n\r\n  // Signup function from context\r\n  const { currentUser, updateEmail, updatePassword } = useAuth();\r\n\r\n  // Request user data from Firebase Realtime Database\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/users/${currentUser.uid}.json`)\r\n      .then((userData) => {\r\n        // Set user data state\r\n        setUserData(userData.data);\r\n\r\n        setInterests(userData.data.interests);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err\", err);\r\n      });\r\n  }, []);\r\n\r\n  const addInterest = (e) => {\r\n    const newInterest = interestRef.current.value;\r\n    // Copy array from firebase or create an empty one if there isnt one in firebase\r\n    let newInterestsArray = interests !== \"\" ? [...interests] : [];\r\n\r\n    if (newInterest.length > 1) {\r\n      if (!newInterestsArray.includes(newInterest)) {\r\n        // Add interest to all interests\r\n        newInterestsArray.push(newInterest);\r\n\r\n        // Update state with new interests\r\n        setInterests(newInterestsArray);\r\n\r\n        // Reset form\r\n        interestRef.current.value = \"\";\r\n      } else {\r\n        setError(\"Interest already exists in your interest list\");\r\n        console.log(\"Interest already exists in your interest list\");\r\n      }\r\n    } else {\r\n      setError(\"Interest must be at least 2 letters\");\r\n      console.log(\"Interest must be at least 2 letters\");\r\n    }\r\n  };\r\n\r\n  const removeInterest = (e, index) => {\r\n    let updatedInterests = [...interests];\r\n\r\n    // Remove interest from array\r\n    updatedInterests.splice(index, 1);\r\n\r\n    // Change interest array to string if there are no interests so Firebase doesn't remove field from Realtime Database\r\n    // When a field is null or [] Firebase removes it\r\n    if (updatedInterests.length === 0) {\r\n      updatedInterests = \"\";\r\n    }\r\n\r\n    // Update new interests state\r\n    setInterests(updatedInterests);\r\n  };\r\n\r\n  // Profile image file\r\n  let fileInput = null;\r\n\r\n  const uploadNewImage = (event) => {\r\n    // Save image file as a URL in order to preview the image\r\n    const imagePreviewURL = URL.createObjectURL(event.target.files[0]);\r\n\r\n    // Update state with preview image file URL\r\n    setProfileImagePreview(imagePreviewURL);\r\n\r\n    // Update profile image file state\r\n    setProfileImageFile(event.target.files[0]);\r\n  };\r\n\r\n  async function handleSubmit(e) {\r\n    // Prevent page from refreshing\r\n    e.preventDefault();\r\n\r\n    // Reset error message if it exists before signing up\r\n    setError(\"\");\r\n    setIsLoading(true);\r\n\r\n    // New form values\r\n    const newFirstName = nameRef.current.value.split(\" \")[0];\r\n    const newLastName = nameRef.current.value.split(\" \")[1];\r\n    const newUsername = usernameRef.current.value;\r\n    const newNationality = nationalityRef.current.value;\r\n    const newCity = cityRef.current.value;\r\n    const newStudyProgram = studyProgramRef.current.value;\r\n\r\n    // Validate form\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      setIsLoading(false);\r\n      // Set an error and exit out of function\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    // Promises list that will be executed\r\n    const promises = [];\r\n\r\n    if (profileImageFile) {\r\n      // Update user data when new image has been uploaded to Firebase Storage\r\n      // console.log(\"Update with image\");\r\n\r\n      // Handle profile image file upload to Firebase Storage\r\n      const uploadTask = storage\r\n        .ref(\r\n          `users/${currentUser.email}/profile-image/${profileImageFile.name}`\r\n        )\r\n        .put(profileImageFile);\r\n\r\n      // Push upload of image to promises list\r\n      // promises.push(uploadTask)\r\n\r\n      await uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          console.log(\"Uploading image...\");\r\n        },\r\n        (error) => {\r\n          // Error function ...\r\n          console.log(\"Uploading image error: \", error);\r\n        },\r\n        function () {\r\n          // Complete function ...\r\n          storage\r\n            .ref(`users/${currentUser.email}`)\r\n            .child(`/profile-image/${profileImageFile.name}`)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              // Set new data with image URL which is going to be uploaded to Firebase Reatime Database\r\n              let newUserData = { ...userData };\r\n\r\n              // Add new values to object\r\n              newUserData.firstName = newFirstName;\r\n              newUserData.lastName = newLastName;\r\n              newUserData.photoURL = url;\r\n              newUserData.username = newUsername;\r\n              newUserData.nationality = newNationality;\r\n              newUserData.city = newCity;\r\n              newUserData.studyProgram = newStudyProgram;\r\n              newUserData.interests = interests;\r\n\r\n              // Add user data update to promises that will be executed\r\n              promises.push(\r\n                axios.put(`users/${currentUser.uid}.json`, newUserData)\r\n              );\r\n            });\r\n\r\n          // console.log(\"Uploaded image\");\r\n        }\r\n      );\r\n    } else {\r\n      // Update user data without updating photoURL field\r\n      // console.log(\"Update without image\");\r\n\r\n      // Duplicate userData\r\n      let newUserData = { ...userData };\r\n\r\n      // Add new values to object\r\n      newUserData.firstName = newFirstName;\r\n      newUserData.lastName = newLastName;\r\n      newUserData.username = newUsername;\r\n      newUserData.nationality = newNationality;\r\n      newUserData.city = newCity;\r\n      newUserData.studyProgram = newStudyProgram;\r\n      newUserData.interests = interests;\r\n\r\n      // newUserData.photoURL = profileImageURL;\r\n      // Don't need to add interests because they are added and\r\n      // removed to userData on form change\r\n\r\n      // Validate if any field been changed\r\n      if (objectsAreTheSame(userData, newUserData)) {\r\n        // exit function and don't push to promises list\r\n        // console.log(\"Objects are the same \");\r\n      } else {\r\n        // Update other user data\r\n        promises.push(axios.put(`users/${currentUser.uid}.json`, newUserData));\r\n      }\r\n    }\r\n\r\n    // Update email\r\n    // if (emailRef.current.value !== currentUser.email) {\r\n    //   promises.push(updateEmail(emailRef.current.value));\r\n    // }\r\n\r\n    // Update password\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value));\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        // Redirect to home page if all promises are successful\r\n        history.push(\"/profile/\" + props.match.params.id);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Update profile error: \", error);\r\n        setError(\"Failed to update profile\");\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }\r\n\r\n  // console.log(\"profile image\",profileImagePreview)\r\n\r\n  let accountImageClasses = [\r\n    \"rounded-circle d-block mx-auto\",\r\n    classes.account_image_main,\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.form_container}>\r\n      <Link\r\n        className=\"text-decoration-none \"\r\n        to={`/profile/${currentUser.uid}`}\r\n      >\r\n        <i className=\"fas fa-angle-left mr-1 mb-3\"></i>Back\r\n      </Link>\r\n\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Update profile</h2>\r\n\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <div className=\"my-3 text-center\">\r\n            <img\r\n              className={accountImageClasses.join(\" \")}\r\n              src={\r\n                profileImagePreview\r\n                  ? profileImagePreview\r\n                  : userData\r\n                  ? userData.photoURL !== \"\"\r\n                    ? userData.photoURL\r\n                    : account_image\r\n                  : account_image\r\n              }\r\n              alt=\"account image\"\r\n            ></img>\r\n            <input\r\n              name=\"image\"\r\n              style={{ display: \"none\" }}\r\n              type=\"file\"\r\n              onChange={uploadNewImage}\r\n              ref={(input) => {\r\n                fileInput = input;\r\n              }}\r\n            />\r\n            <Button\r\n              onClick={() => fileInput.click()}\r\n              className=\"my-4 btn-purple-rounded\"\r\n            >\r\n              Select new image\r\n            </Button>\r\n          </div>\r\n          <p className=\"text-muted\">\r\n            Leave blank the fields which you don't want to change\r\n          </p>\r\n\r\n          <Form onSubmit={(e) => handleSubmit(e)}>\r\n            <Form.Group id=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue={\r\n                  userData && `${userData.firstName} ${userData.lastName}`\r\n                }\r\n                ref={nameRef}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"username\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue={userData && userData.username}\r\n                ref={usernameRef}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"nationality\">\r\n              <Form.Label>Nationality</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue={userData ? userData.nationality : \"\"}\r\n                ref={nationalityRef}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"city\">\r\n              <Form.Label>City</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue={userData ? userData.city : \"\"}\r\n                ref={cityRef}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"studyProgram\">\r\n              <Form.Label>Study program</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue={userData ? userData.studyProgram : \"\"}\r\n                ref={studyProgramRef}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"interests\">\r\n              <Form.Label>Interests</Form.Label>\r\n              <InputGroup className=\"mb-3\">\r\n                <FormControl\r\n                  placeholder=\"Add interest\"\r\n                  aria-label=\"interest\"\r\n                  aria-describedby=\"basic-addon2\"\r\n                  ref={interestRef}\r\n                />\r\n                <InputGroup.Append>\r\n                  <Button onClick={(e) => addInterest(e)} variant=\"primary\">\r\n                    Add\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n              <div className=\"w-100 mx-auto row text-center\">\r\n                {interests && interests !== \"\"\r\n                  ? interests.map((interest, index) => {\r\n                      return (\r\n                        <div\r\n                          key={interest}\r\n                          onClick={(e) => removeInterest(e, index)}\r\n                          className=\"interest-container col-4 px-1\"\r\n                        >\r\n                          <p className=\"interest-box\">{interest}</p>\r\n                        </div>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </div>\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} />\r\n            </Form.Group>\r\n\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Confirm password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordConfirmRef} />\r\n            </Form.Group>\r\n\r\n            <Button\r\n              disabled={isLoading}\r\n              className=\"btn-purple-rounded w-100 mb-3\"\r\n              type=\"submit\"\r\n            >\r\n              Update\r\n            </Button>\r\n\r\n            <Link\r\n              to={`/profile/${currentUser.uid}`}\r\n              className=\"btn btn-danger btn-cancel w-100 \"\r\n              type=\"submit\"\r\n            >\r\n              Cancel\r\n            </Link>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\shared\\sharedFunctions.js",["113"],"export const objectsAreTheSame = (objectOne, objectTwo) => {\r\n  const objectOneKeys = Object.keys(objectOne);\r\n  const objectTwoKeys = Object.keys(objectTwo);\r\n\r\n  if (objectOneKeys.length !== objectTwoKeys.length) {\r\n    return false;\r\n  }\r\n\r\n  // loop through first object keys\r\n  for (let key of objectOneKeys) {\r\n    console.log(objectOne[key],  objectTwo[key],   objectOne[key] == objectTwo[key])    \r\n\r\n    // Check if field if array (interests) // arrays are objects\r\n    if (typeof(objectOne[key]) == \"object\") {\r\n\r\n      // Check if arrays are the same\r\n      if(JSON.stringify(objectOne[key]) !== JSON.stringify(objectTwo[key])){\r\n        return false\r\n      }\r\n    }\r\n    // Check if object values are the same\r\n    if (objectOne[key] !== objectTwo[key]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n",["114","115"],"D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\Discussions.js",["116"],"import React, { useEffect, useState } from \"react\";\r\nimport Categories from \"./Categories\";\r\nimport DiscussionBox from \"./DiscussionBox\";\r\nimport axios from \"../../axios\";\r\nimport { db } from '../../firebase'\r\n\r\n// React Router\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Discussions = () => {\r\n  const [discussions, setDiscussions] = useState([]);\r\n  const [filter, setFilter] = useState(\"All\");\r\n\r\n  let sortedDiscussionsByDate = discussions.slice().sort((a, b) => new Date(b.datePosted) - new Date(a.datePosted));\r\n\r\n  let filteredDiscussions = [...sortedDiscussionsByDate];\r\n\r\n  // Filter discussions with filter\r\n  if(filter !== \"All\"){\r\n    filteredDiscussions = discussions.filter(discussion => ( \r\n      discussion.category === filter\r\n    ))\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/discussions.json\")\r\n      .then((response) => {\r\n        const discussionsData = []\r\n        \r\n        // Push all discussions from Firebase in an array\r\n        for(const discussion in response.data){\r\n          discussionsData.push(response.data[discussion]);\r\n        }\r\n\r\n        // Set state with new discussions\r\n        setDiscussions(discussionsData);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in fetching discussion data: \", error);\r\n      });\r\n  }, [filter]);\r\n\r\n  const filterDiscussions = (filter) => {\r\n    console.log(filter)\r\n    setFilter(filter)\r\n  }\r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"row mt-3\">\r\n      <div className=\"col-md-3 side-menu \">\r\n        <Link to=\"/add-discussion\" className=\"btn btn-purple-rounded text-center my-3 btn-block\">\r\n          Add a discussion\r\n        </Link>\r\n        <Categories filterDiscussions={(e) => filterDiscussions(e.target.value)} filter={filter}/>\r\n      </div>\r\n      <div className=\"col-md-9\">\r\n        <h2 className=\"mt-2 mb-3 \">{filter} discussions</h2>\r\n        <div className=\"discussions-list\">\r\n          {discussions.length !== 0 ? filteredDiscussions.map((discussion, idx) => {\r\n            return <DiscussionBox \r\n            key={idx}\r\n            discussionID={discussion.discussionID}\r\n            authorID={discussion.authorID}\r\n            title={discussion.title}\r\n            category={discussion.category}\r\n            initialComment={discussion.initialComment}\r\n            comments={discussion.comments}\r\n            likes={discussion.likes}\r\n            />;\r\n          }) : <h4 className=\"text-muted\">No discussions available</h4> }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Discussions;\r\n","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\Categories.js",["117"],"import React from \"react\";\r\nimport { ListGroup, Form } from \"react-bootstrap\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nconst Categories = (props) => {\r\n  const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\r\n  const categoryList = [\r\n    \"All\",\r\n    \"COVID-19\",\r\n    \"Arts\",\r\n    \"Communications\",\r\n    \"Business\",\r\n    \"Engineering\",\r\n    \"Healthcare\",\r\n    \"ICT\",\r\n    \"Logistics\",\r\n    \"International\",\r\n    \"Intership\",\r\n    \"Other\",\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      {isMobile ? (\r\n        <Form.Group className=\"w-50\" controlId=\"discussion-form-category\">\r\n          <Form.Control as=\"select\" onChange={(e) => props.filterDiscussions(e)}>\r\n            {categoryList.map((category, idx) => {\r\n              return (\r\n                <option\r\n                  value={category}\r\n                  key={idx}>\r\n                  {category}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n        </Form.Group>\r\n      ) : (\r\n        <ListGroup>\r\n          {categoryList.map((category, idx) => {\r\n            return <ListGroup.Item\r\n            action\r\n            key={idx}\r\n            value={category}\r\n            active={props.filter == category}\r\n            onClick={(e) => props.filterDiscussions(e)}\r\n          >\r\n            {category}\r\n          </ListGroup.Item>\r\n          })}\r\n        </ListGroup>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\DiscussionBox.js",["118","119"],"import React, { useEffect, useState } from \"react\";\r\nimport classes from \"./Discussions.module.scss\";\r\nimport axios from \"../../axios\";\r\nimport account_image from \"../../assets/account/account_icon_purple.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst DiscussionBox = (props) => {\r\n  const [authorData, setAuthorData] = useState();\r\n\r\n  useEffect(async () => {\r\n    // Fetch author data from Firebase\r\n    await axios\r\n      .get(`/users/${props.authorID}.json`)\r\n      .then((userData) => {\r\n        // Set user data state\r\n        setAuthorData(userData.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error in fetching author data: \", err);\r\n      });\r\n  }, [props]);\r\n\r\n  // Display only 20 words of the initial comment\r\n  let commentToBeDisplayed = props.initialComment.split(\" \");\r\n  commentToBeDisplayed.splice(20, commentToBeDisplayed.length - 1);\r\n\r\n  let discussionBoxClasses = [\r\n    \"row px-2 py-3 mb-4 mx-0  rounded \",\r\n    classes.dicussion_box,\r\n  ];\r\n\r\n  return (\r\n    <div className={discussionBoxClasses.join(\" \")}>\r\n      <div className=\"col-lg-3 row text-center\">\r\n        <div className=\"col-4 col-lg-12\">\r\n          <img\r\n            src={authorData && authorData.photoURL}\r\n            className={classes.discussion_box_image}\r\n            alt=\"img\"\r\n          />\r\n        </div>\r\n        <div className=\"col-8 col-lg-12 \">\r\n          <Link to={`/profile/` + props.authorID} className=\"my-1 h5 text-decoration-none black\">{authorData && authorData.username}</Link>\r\n          <p className=\"my-1\">{authorData && authorData.studyProgram}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-lg-9 p-0\">\r\n        <div className=\"row my-2 my-md-0 \">\r\n          <h3 className=\"col-md-9 pr-md-0\">{props.title}</h3> \r\n          <p className=\"col-md-3\">\r\n            <span className=\"badge badge-primary purple-bgc  ml-1 px-3 py-2\">\r\n              {props.category}\r\n            </span>\r\n          </p>\r\n        </div>\r\n        <p className=\"my-2 text-muted\">{commentToBeDisplayed.join(\" \")}...</p>\r\n        <div className=\"d-flex justify-content-between\">\r\n          <Link\r\n            to={\"/discussion/\" + props.discussionID}\r\n            className=\"btn btn-link p-0 my-0\"\r\n          >\r\n            Read more\r\n          </Link>\r\n          <div className=\"icons my-0 text-muted\">\r\n            <span className=\"mx-2\">\r\n              <i className=\"far fa-comment-alt mx-1\"></i>\r\n              {props.comments ? props.comments.length : \"0\"}\r\n            </span>\r\n            <span className=\"mx-2\">\r\n              <i className=\"far fa-heart mx-1\"></i>\r\n              {props.likes}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiscussionBox;\r\n","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\DiscussionForm.js",["120","121","122"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport classes from \"./Discussions.module.scss\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport axios from \"../../axios\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\n\r\nconst DiscussionForm = () => {\r\n  const { currentUser } = useAuth();\r\n  const [userData, setUserData] = useState();\r\n  const history = useHistory();\r\n\r\n  const categoryList = [\"COVID-19\", \"Arts\", \"Communications\", \"Business\", \"Engineering\", \"Healthcare\", \"ICT\", \"Logistics\", \"International\", \"Intership\", \"Other\",]\r\n\r\n  const titleRef = useRef();\r\n  const categoryRef = useRef();\r\n  const commentRef = useRef();\r\n\r\n  // Fetch data from Firebase Realtime Database\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/users/${currentUser.uid}.json`)\r\n      .then((userData) => {\r\n        // Set user data state\r\n        setUserData(userData.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error in fetching data from Firebase\", err);\r\n      });\r\n  }, []);\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Discussion entry data that will be saved to Firebase Realtime Database\r\n    let newDiscussionEntry = {\r\n      discussionID: \"\",\r\n      title: titleRef.current.value,\r\n      category: categoryRef.current.value,\r\n      initialComment: commentRef.current.value,\r\n      datePosted: new Date,\r\n      comments: [],\r\n      authorID: currentUser.uid,\r\n      likes: 0,\r\n    };\r\n\r\n    // Push discussion entry to Firebase Realtime Database\r\n    await axios.post(`/discussions.json`, newDiscussionEntry)\r\n      .then( async(response) => {\r\n        // Get discussion ID from Firebase and make a put request to update it\r\n        let newDiscussionEntryWithID = {...newDiscussionEntry}\r\n\r\n        newDiscussionEntryWithID.discussionID = response.data.name;\r\n\r\n        await axios.put(`/discussions/${response.data.name}.json`, newDiscussionEntryWithID).then(\r\n          (response) => {\r\n            // console.log(\"Response from put request: \", response)\r\n          }\r\n        ).catch((err) => {\r\n          console.log(\"Error from put request: \", err)\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error in post request to Firebase Realtime Databse\", err);\r\n      });\r\n\r\n    // Redirect to home page\r\n    history.push(\"/discuss\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.discussion_form_container}>\r\n      <Link className=\"text-decoration-none\" to=\"discuss\"><i className=\"fas fa-angle-left mr-1\"></i>Back</Link>\r\n      <h1 className=\"mb-3\">Add a discussion</h1>\r\n      <form onSubmit={handleFormSubmit} className=\"\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <Form.Group id=\"discussion-form-title\"> \r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                ref={titleRef}\r\n                type=\"text\"\r\n                placeholder=\"Title of discussion\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <Form.Group controlId=\"discussion-form-category\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control as=\"select\" ref={categoryRef}>\r\n                {categoryList.map(category =>{\r\n                  return <option key={category}>{category}</option>\r\n                })}\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </div>\r\n\r\n          <div className=\"col-md-12\">\r\n            <Form.Group controlId=\"discussion-form-initial-comment\">\r\n              <Form.Label>Comment</Form.Label>\r\n              <Form.Control ref={commentRef} as=\"textarea\" rows={3} required />\r\n            </Form.Group>\r\n          </div>\r\n        </div>\r\n        <div className=\"submit-btn\">\r\n          <button type=\"submit\" className=\"btn btn-purple-rounded\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiscussionForm;\r\n","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\DiscussionDetail\\DiscussionDetail.js",["123","124"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport classes from \"../Discussions.module.scss\";\r\nimport axios from \"../../../axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { useAuth } from \"../../../Context/AuthContext\";\r\nimport DiscussionComment from \"./DiscussionComment\";\r\nimport account_image from \"../../../assets/account/account_icon_purple.png\";\r\n\r\n// DayJS\r\nimport dayjs from \"dayjs\";\r\n\r\nconst DiscussionDetail = (props) => {\r\n  const { currentUser } = useAuth();\r\n  const [userData, setUserData] = useState();\r\n  const [discussionData, setDiscussionData] = useState({});\r\n  const [isDiscussionLiked, setIsDiscussionLiked] = useState(false);\r\n\r\n  // Alert and error\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const [show, setShow] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const commentInputRef = useRef();\r\n\r\n  // Fetch discussion data from Firebase Realtime Database\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/discussions/${props.match.params.id}.json`)\r\n      .then((response) => {\r\n        console.log(\"response\", response);\r\n        setDiscussionData(response.data);\r\n      })\r\n      .then(() => {\r\n        // Fetch user data from Firebase\r\n        axios\r\n          .get(`/users/${currentUser.uid}.json`)\r\n          .then((userData) => {\r\n            // Set user data state\r\n            setUserData(userData.data);\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"err\", err);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in fetching discussion data: \", error);\r\n      });\r\n  }, []);\r\n\r\n  const postComment = async () => {\r\n    // Reset error and alert\r\n    setError(\"\");\r\n    setAlertMessage(\"\");\r\n    setShow(true);\r\n\r\n    // Get the comment text from from\r\n    const comment = commentInputRef.current.value;\r\n\r\n    // Validation\r\n    if (comment === \"\") {\r\n      setError(\"Comment field must not be empty\");\r\n    } else {\r\n      let newDiscussionData = { ...discussionData };\r\n\r\n      // Check whether comments field exists\r\n      if (newDiscussionData.comments) {\r\n        // Remove initial \"none\" comment entry if it exists\r\n        if (newDiscussionData.comments[0] === \"none\") {\r\n          newDiscussionData.comments.splice(0, 1);\r\n        }\r\n      } else {\r\n        // Add a comments field if it doesn't existing\r\n        newDiscussionData = {\r\n          ...newDiscussionData,\r\n          comments: [],\r\n        };\r\n      }\r\n\r\n      // Initialize comment object\r\n      let newCommentEntry = {\r\n        comment: comment,\r\n        authorID: userData.userID,\r\n        datePosted: new Date(),\r\n      };\r\n\r\n      // Push comment to comments array\r\n      newDiscussionData.comments.push(newCommentEntry);\r\n\r\n      // Make a put request to update discussion comments data\r\n      await axios\r\n        .put(`/discussions/${props.match.params.id}.json`, newDiscussionData)\r\n        .then((response) => {\r\n          //   console.log(\"Response from put request: \", response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error in fetching discussion data: \", error);\r\n        });\r\n\r\n      setAlertMessage(\"You successfuly posted your comment\");\r\n\r\n      // Reset field\r\n      commentInputRef.current.value = \"\";\r\n\r\n      // Update state\r\n      setDiscussionData(newDiscussionData)\r\n     \r\n    }\r\n  };\r\n\r\n  // Sort discussions by date - most recent first\r\n  let sortedCommentsByDate = [];\r\n\r\n  if (discussionData.comments) {\r\n    sortedCommentsByDate = discussionData.comments\r\n      .slice()\r\n      .sort((a, b) => new Date(b.datePosted) - new Date(a.datePosted));\r\n  }\r\n\r\n  const likeDiscussion = () => {\r\n    // Get discussion data\r\n    let newDiscussionData = { ...discussionData };\r\n\r\n    // Increment or decrement likes\r\n    if (isDiscussionLiked === true) {\r\n      // If user unlikes discussion\r\n      newDiscussionData.likes -= 1;\r\n    } else {\r\n      newDiscussionData.likes += 1;\r\n    }\r\n\r\n    //Update state\r\n    setIsDiscussionLiked(!isDiscussionLiked);\r\n    setDiscussionData(newDiscussionData);\r\n\r\n    // Push new discussion data to Firebase Realtime Database\r\n    // Make a put request to update discussion likes\r\n    axios\r\n      .put(`/discussions/${props.match.params.id}.json`, newDiscussionData)\r\n      .then((response) => {\r\n        //   console.log(\"Response from put request: \", response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error in fetching discussion data: \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.discussion_detail_container}>\r\n      <Link className=\"text-decoration-none \" to=\"/discuss\">\r\n        <i className=\"fas fa-angle-left mr-1\"></i>Back\r\n      </Link>\r\n      <div className=\"rounded mb-2 px-2 py-1 row\">\r\n        <div className=\"w-100 my-2 my-md-0\">\r\n          <h1 className=\"w-100 mb-2 pb-2 pr-md-0 border-bottom\">\r\n            {discussionData.title}\r\n          </h1>\r\n          <div className=\"d-flex justify-content-between text-muted\">\r\n            <div className=\"discussion-info\">\r\n              <span className=\"mr-2\">\r\n                <span className=\"badge badge-primary purple-bgc ml-1 px-3 py-2\">\r\n                  {discussionData.category}\r\n                </span>\r\n              </span>\r\n              <span className=\"mx-3\">\r\n                {dayjs(discussionData.datePosted).format(\"MMM DD, YYYY\")}\r\n              </span>\r\n            </div>\r\n\r\n            <span className=\"\">\r\n              <i\r\n                onClick={() => likeDiscussion()}\r\n                className={\r\n                  isDiscussionLiked\r\n                    ? \"fas fa-heart red like-btn mx-1\"\r\n                    : \"far fa-heart like-btn mx-1\"\r\n                }\r\n              ></i>\r\n              {discussionData.likes === 1\r\n                ? discussionData.likes + \" like\"\r\n                : discussionData.likes + \" likes\"}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Initial comment */}\r\n        <div class=\"w-100\">\r\n          <DiscussionComment commentData={discussionData} />\r\n        </div>\r\n\r\n        <div className=\"comment-form row w-100 mx-auto my-4\">\r\n          {alertMessage !== \"\" && show ? (\r\n            <Alert\r\n              className=\"col-12 mx-auto\"\r\n              variant=\"success\"\r\n              onClose={() => setShow(false)}\r\n              dismissible\r\n            >\r\n              {alertMessage}\r\n            </Alert>\r\n          ) : null}\r\n          {error !== \"\" && show ? (\r\n            <Alert\r\n              className=\"col-12 mx-auto\"\r\n              variant=\"danger\"\r\n              onClose={() => setShow(false)}\r\n              dismissible\r\n            >\r\n              {error}\r\n            </Alert>\r\n          ) : null}\r\n          <div className=\"col-md-2 mb-2\">\r\n            <div className=\"mx-md-auto d-flex d-md-block justify-content-start \">\r\n              <div className=\"text-center mr-2 mr-md-0\">\r\n                <img\r\n                  src={userData ? userData.photoURL !== \"\" ? userData.photoURL : account_image : account_image}\r\n                  className={classes.discussion_box_image}\r\n                  alt=\"img\"\r\n                />\r\n              </div>\r\n              <div className=\"text-center my-auto\">\r\n                <p className=\"text-muted mt-1\">\r\n                  {userData && userData.username}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\" col-md-10\">\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Comment</Form.Label>\r\n              <Form.Control ref={commentInputRef} as=\"textarea\" rows={3} />\r\n            </Form.Group>\r\n            <Button onClick={postComment} className=\"btn-purple-rounded\">\r\n              Post\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"comments my-5 w-100\">\r\n          <div className=\" pb-2 border-bottom w-100\">\r\n            <span className=\"text-muted  \">\r\n              <i className=\"far fa-comment-alt mx-1\"></i>\r\n              {discussionData.comments\r\n                ? discussionData.comments.length !== 1\r\n                  ? discussionData.comments.length + \" comments\"\r\n                  : discussionData.comments.length + \" comment\"\r\n                : \"0 comments\"}\r\n            </span>\r\n          </div>\r\n          <div className=\"comments\">\r\n            {discussionData.comments !== [] ? (\r\n              sortedCommentsByDate.map((commentData) => {\r\n                return (\r\n                  <DiscussionComment\r\n                    key={commentData.datePosted}\r\n                    commentData={commentData}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <p>No comments yet</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiscussionDetail;\r\n","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Discussions\\DiscussionDetail\\DiscussionComment.js",["125","126"],"import React, { useState, useEffect } from \"react\";\r\nimport classes from \"../Discussions.module.scss\";\r\nimport axios from \"../../../axios\";\r\nimport dayjs from \"dayjs\"\r\n\r\nconst DiscussionComment = (props) => {\r\n  const [authorData, setAuthorData] = useState();\r\n\r\n  useEffect(async () => {\r\n    // Fetch author data from Firebase\r\n    await axios\r\n      .get(`/users/${props.commentData.authorID}.json`)\r\n      .then((userData) => {\r\n        // Set user data state\r\n        setAuthorData(userData.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error in fetching author data: \", err);\r\n      });\r\n  }, [props]);\r\n\r\n  const initialComment = props.commentData.initialComment;\r\n  const datePostedFormatted = dayjs(props.commentData.datePosted).format(\"MMM DD, YYYY\");\r\n\r\n  return (\r\n    <div className=\"comment row border-bottom pb-3 my-4 mx-auto\">\r\n      <div className=\"col-md-2 mb-2\">\r\n        <div className=\"mx-md-auto d-flex d-md-block justify-content-start \">\r\n          <div className=\"text-center mr-2 mr-md-0\">\r\n            <img\r\n              src={authorData && authorData.photoURL}\r\n              className={classes.discussion_box_image}\r\n              alt=\"profile image\"\r\n            />\r\n          </div>\r\n          <div className=\"text-center my-auto\">\r\n            <p className=\"text-muted mt-1 mb-0 \">\r\n              {authorData && authorData.username}\r\n            </p>\r\n            <span className=\"mx-auto text-muted \">\r\n              {datePostedFormatted}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-10\">\r\n        <p className=\"my-2 text-muted\">\r\n          {initialComment ? initialComment : props.commentData.comment}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiscussionComment;\r\n","D:\\Fontys\\Media design\\DRAM-group\\we-fontys\\src\\components\\Home\\Homepage.js",["127","128"],"import React from \"react\";\r\nimport classes from \"./Homepage.module.scss\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport fontysImgOne from \"../../assets/images/fontys1.jpg\";\r\nimport fontysImgTwo from \"../../assets/images/fontys2.jpg\";\r\n\r\nconst Homepage = () => {\r\n  let jumbotronParagraphClasses = [\r\n    \"w-md-50 mx-auto my-4 line-height\",\r\n    classes.jumbotron_paragraph,\r\n  ];\r\n  return (\r\n    <div className=\"container my-4\">\r\n      <div className={classes.jumbotron}>\r\n        <h1>The real information source for Fontys students</h1>\r\n        <p className={jumbotronParagraphClasses.join(\" \")}>\r\n          Lorem ipsum, dolor sit amet consectetur adipisicing elit. Voluptatem\r\n          mollitia numquam optio aliquid similique magnam reiciendis\r\n          exercitationem!\r\n        </p>\r\n        <Link to=\"/signup\" class=\"btn btn-purple-rounded\">Sign up</Link>\r\n      </div>\r\n      <div class=\"row my-4\">\r\n        <div class=\"col-md-6 my-4\">\r\n          <img\r\n            src={fontysImgOne}\r\n            className={classes.info_image}\r\n            alt=\"eindhoven image\"\r\n          />\r\n        </div>\r\n        <div class=\"col-md-6 my-4\">\r\n          <h2>Lorem, ipsum dolor.</h2>\r\n          <p className=\"line-height\">\r\n            Lorem ipsum dolor sit, amet consectetur adipisicing elit.\r\n            Necessitatibus quia animi non adipisci obcaecati distinctio eum\r\n            tempore. Ducimus eveniet unde atque libero! Velit veniam\r\n            exercitationem autem. Quod beatae, porro repudiandae, laboriosam\r\n            inventore?\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div class=\"row my-4\">\r\n        <div class=\"col-md-6 my-4\">\r\n          <h2>Lorem, ipsum dolor.</h2>\r\n          <p className=\"line-height\">\r\n            Lorem ipsum dolor sit, amet consectetur adipisicing elit.\r\n            Necessitatibus quia animi non adipisci obcaecati distinctio eum\r\n            tempore. Ducimus eveniet unde atque libero! Velit veniam\r\n            exercitationem autem. Quod beatae, porro repudiandae, laboriosam\r\n            inventore?\r\n          </p>\r\n        </div>\r\n        <div class=\"col-md-6 my-4\">\r\n          <img\r\n            src={fontysImgTwo}\r\n            className={classes.info_image}\r\n            alt=\"eindhoven image\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n",{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":11,"column":3,"nodeType":"135","messageId":"136","endLine":11,"endColumn":14},{"ruleId":"133","severity":1,"message":"137","line":13,"column":3,"nodeType":"135","messageId":"136","endLine":13,"endColumn":7},{"ruleId":"133","severity":1,"message":"138","line":1,"column":35,"nodeType":"135","messageId":"136","endLine":1,"endColumn":44},{"ruleId":"133","severity":1,"message":"139","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":13},{"ruleId":"133","severity":1,"message":"140","line":31,"column":19,"nodeType":"135","messageId":"136","endLine":31,"endColumn":30},{"ruleId":"133","severity":1,"message":"137","line":7,"column":16,"nodeType":"135","messageId":"136","endLine":7,"endColumn":20},{"ruleId":"141","severity":1,"message":"142","line":33,"column":6,"nodeType":"143","endLine":33,"endColumn":8,"suggestions":"144"},{"ruleId":"133","severity":1,"message":"145","line":49,"column":7,"nodeType":"135","messageId":"136","endLine":49,"endColumn":22},{"ruleId":"146","severity":1,"message":"147","line":67,"column":17,"nodeType":"148","endLine":70,"endColumn":18},{"ruleId":"133","severity":1,"message":"149","line":15,"column":3,"nodeType":"135","messageId":"136","endLine":15,"endColumn":10},{"ruleId":"133","severity":1,"message":"150","line":29,"column":10,"nodeType":"135","messageId":"136","endLine":29,"endColumn":25},{"ruleId":"133","severity":1,"message":"151","line":29,"column":27,"nodeType":"135","messageId":"136","endLine":29,"endColumn":45},{"ruleId":"133","severity":1,"message":"152","line":50,"column":24,"nodeType":"135","messageId":"136","endLine":50,"endColumn":35},{"ruleId":"141","severity":1,"message":"153","line":65,"column":6,"nodeType":"143","endLine":65,"endColumn":8,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":276,"column":13,"nodeType":"148","endLine":288,"endColumn":14},{"ruleId":"157","severity":1,"message":"158","line":11,"column":67,"nodeType":"159","messageId":"160","endLine":11,"endColumn":69},{"ruleId":"129","replacedBy":"161"},{"ruleId":"131","replacedBy":"162"},{"ruleId":"133","severity":1,"message":"163","line":5,"column":10,"nodeType":"135","messageId":"136","endLine":5,"endColumn":12},{"ruleId":"157","severity":1,"message":"158","line":45,"column":34,"nodeType":"159","messageId":"160","endLine":45,"endColumn":36},{"ruleId":"133","severity":1,"message":"164","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":21},{"ruleId":"141","severity":1,"message":"165","line":10,"column":13,"nodeType":"166","endLine":21,"endColumn":4},{"ruleId":"133","severity":1,"message":"167","line":11,"column":10,"nodeType":"135","messageId":"136","endLine":11,"endColumn":18},{"ruleId":"141","severity":1,"message":"153","line":31,"column":6,"nodeType":"143","endLine":31,"endColumn":8,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":42,"column":19,"nodeType":"171","messageId":"172","endLine":42,"endColumn":27,"fix":"173"},{"ruleId":"133","severity":1,"message":"174","line":4,"column":16,"nodeType":"135","messageId":"136","endLine":4,"endColumn":26},{"ruleId":"141","severity":1,"message":"175","line":49,"column":6,"nodeType":"143","endLine":49,"endColumn":8,"suggestions":"176"},{"ruleId":"141","severity":1,"message":"165","line":9,"column":13,"nodeType":"166","endLine":20,"endColumn":4},{"ruleId":"155","severity":1,"message":"156","line":30,"column":13,"nodeType":"148","endLine":34,"endColumn":15},{"ruleId":"155","severity":1,"message":"156","line":26,"column":11,"nodeType":"148","endLine":30,"endColumn":13},{"ruleId":"155","severity":1,"message":"156","line":55,"column":11,"nodeType":"148","endLine":59,"endColumn":13},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'FormControl' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'currentUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["179"],"'defaultImageURL' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Spinner' is defined but never used.","'profileImageURL' is assigned a value but never used.","'setProfileImageURL' is assigned a value but never used.","'updateEmail' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.",["180"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["177"],["178"],"'db' is defined but never used.","'account_image' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'userData' is assigned a value but never used.",["181"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"182","text":"183"},"'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser.uid' and 'props.match.params.id'. Either include them or remove the dependency array.",["184"],"no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"187","fix":"189"},[1427,1427],"()",{"desc":"190","fix":"191"},"Update the dependencies array to be: [props.match.params.id]",{"range":"192","text":"193"},"Update the dependencies array to be: [currentUser.uid]",{"range":"194","text":"195"},{"range":"196","text":"195"},"Update the dependencies array to be: [currentUser.uid, props.match.params.id]",{"range":"197","text":"198"},[948,950],"[props.match.params.id]",[1904,1906],"[currentUser.uid]",[1056,1058],[1684,1686],"[currentUser.uid, props.match.params.id]"]